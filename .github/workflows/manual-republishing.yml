name: Build & Upload Python Package to Asset

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-n-publish:
    name: Build and publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -U poetry
        pip install build

    - name: Build package
      run: python -m build

    #- name: Publish package to PyPI
    #  uses: pypa/gh-action-pypi-publish@master
    #  with:
    #    user: __token__
    #    password: ${{ secrets.PYPI_API_TOKEN }}

    #- name: Create GitHub Release
    #  id: create_release
    #  uses: actions/create-release@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #  with:
    #    tag_name: ${{ github.ref }}
    #    release_name: ${{ github.ref }}
    #    draft: false
    #    prerelease: false

    - name: Get Asset Name
      run: |
            export PKG=$(ls dist/ | grep whl)
            set -- $PKG
            echo "name=$1" >> $GITHUB_ENV
    - name: Upload Release Asset (whl) to GitHub
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ env.name }}
          asset_name: ${{ env.name }}
          asset_content_type: application/zip
